{"platform":{"name":"debian","release":"11.6","target_id":"f079a7f5-d70e-5393-9052-3fe83728fc75"},"profiles":[{"name":"my_nginx_overlay","version":"0.1.0","sha256":"ed4a1faa6c5a3b116eaadc9ff604c4c4e51d34b12ed6e7fa6b819a02c8d51a33","title":"InSpec Profile","maintainer":"The Authors","summary":"An InSpec Compliance Profile","license":"Apache-2.0","copyright":"The Authors","copyright_email":"you@example.com","supports":[{"platform":"os"}],"attributes":[],"depends":[{"name":"my_nginx","path":"../my_nginx","status":"loaded"}],"groups":[{"id":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb","controls":["nginx-version","nginx-modules","nginx-conf-file","nginx-conf-perms","nginx-shell-access"]}],"controls":[{"id":"nginx-version","title":"NGINX version","desc":"The required version of NGINX should be installed.","descriptions":[{"label":"default","data":"The required version of NGINX should be installed."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-version' do\n  impact 1.0\n  title 'NGINX version'\n  desc 'The required version of NGINX should be installed.'\n  describe nginx.version do\n    it { should cmp >= input('nginx_version') }\n  end\nend\n","source_location":{"line":1,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[]},{"id":"nginx-modules","title":"NGINX modules","desc":"The required NGINX modules should be installed.","descriptions":[{"label":"default","data":"The required NGINX modules should be installed."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-modules' do\n  impact 1.0\n  title 'NGINX modules'\n  desc 'The required NGINX modules should be installed.'\n  modules = input('nginx_modules')\n  describe nginx do\n    modules.each do |current_module|\n      # puts current_module\n      its('modules') { should include current_module }\n    end\n  end\nend\n","source_location":{"line":10,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[]},{"id":"nginx-conf-file","title":"NGINX configuration file","desc":"The NGINX config file should exist.","descriptions":[{"label":"default","data":"The NGINX config file should exist."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-conf-file' do\n  impact 1.0\n  title 'NGINX configuration file'\n  desc 'The NGINX config file should exist.'\n  # describe file('/etc/nginx/nginx.conf') do\n  #   it { should be_file }\n  # end\n\n  describe 'test file' do\n    subject { file('/etc/nginx/nginx.conf') }\n    it 'should be a file' do\n      expect(subject).to(be_file)\n    end\n  end\nend\n","source_location":{"line":23,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[]},{"id":"nginx-conf-perms","title":"NGINX configuration","desc":"The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others.","descriptions":[{"label":"default","data":"The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others."},{"label":"caveat","data":"Not applicable"}],"impact":1.0,"refs":[{"ref":[]}],"tags":{},"code":"  control 'nginx-conf-perms' do\n    desc 'caveat', 'Not applicable'\n  end\n","source_location":{"line":39,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[]},{"id":"nginx-shell-access","title":"NGINX shell access","desc":"The NGINX shell access should be restricted to admin users.","descriptions":[{"label":"default","data":"The NGINX shell access should be restricted to admin users."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-shell-access' do\n  impact 1.0\n  title 'NGINX shell access'\n  desc 'The NGINX shell access should be restricted to admin users.'\n  # describe users.shells(/bash/).usernames do\n  #   it { should be_in input('admin_users')}\n  # end\n\n  non_admin_users = users.shells(/bash/).usernames\n  \n  describe \"Bash access for non-admin users\" do\n    it \"should be removed.\" do\n      failure_message = \"These non-admin should not have bash access: #{non_admin_users.join(\", \")}\"\n      expect(non_admin_users).to eq(input('admin_users')), failure_message\n    end\n  end\n\nend","source_location":{"line":52,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[]}],"status":"loaded","status_message":""},{"name":"my_nginx","version":"0.1.0","sha256":"9f6c15e9ead7a81a588466c79c89fbd44f9afa7df481efa15a7bd4f23051785f","title":"InSpec Profile","maintainer":"The Authors","summary":"An InSpec Compliance Profile","license":"Apache-2.0","copyright":"The Authors","copyright_email":"you@example.com","supports":[{"platform":"os"}],"attributes":[{"name":"nginx_version","options":{"type":"String","value":"1.10.3"}},{"name":"nginx_modules","options":{"type":"Array","value":["http_ssl","stream_ssl","mail_ssl"]}},{"name":"admin_users","options":{"type":"Array","value":["admin"]}}],"parent_profile":"my_nginx_overlay","groups":[{"id":"controls/example.rb","controls":["nginx-version","nginx-modules","nginx-conf-file","nginx-conf-perms","nginx-shell-access"]}],"controls":[{"id":"nginx-version","title":"NGINX version","desc":"The required version of NGINX should be installed.","descriptions":[{"label":"default","data":"The required version of NGINX should be installed."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-version' do\n  impact 1.0\n  title 'NGINX version'\n  desc 'The required version of NGINX should be installed.'\n  describe nginx.version do\n    it { should cmp >= input('nginx_version') }\n  end\nend\n","source_location":{"line":1,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"1.23.3 is expected to cmp >= \"1.10.3\"","run_time":0.000557016,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"Object","resource_params":"[]","resource_id":"1.23.3"}]},{"id":"nginx-modules","title":"NGINX modules","desc":"The required NGINX modules should be installed.","descriptions":[{"label":"default","data":"The required NGINX modules should be installed."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-modules' do\n  impact 1.0\n  title 'NGINX modules'\n  desc 'The required NGINX modules should be installed.'\n  modules = input('nginx_modules')\n  describe nginx do\n    modules.each do |current_module|\n      # puts current_module\n      its('modules') { should include current_module }\n    end\n  end\nend\n","source_location":{"line":10,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"Nginx Environment modules is expected to include \"http_ssl\"","run_time":0.004250816,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"nginx","resource_params":"[]","resource_id":"/usr/sbin/nginx"},{"status":"passed","code_desc":"Nginx Environment modules is expected to include \"stream_ssl\"","run_time":0.000186305,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"nginx","resource_params":"[]","resource_id":"/usr/sbin/nginx"},{"status":"passed","code_desc":"Nginx Environment modules is expected to include \"mail_ssl\"","run_time":0.000222406,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"nginx","resource_params":"[]","resource_id":"/usr/sbin/nginx"}]},{"id":"nginx-conf-file","title":"NGINX configuration file","desc":"The NGINX config file should exist.","descriptions":[{"label":"default","data":"The NGINX config file should exist."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-conf-file' do\n  impact 1.0\n  title 'NGINX configuration file'\n  desc 'The NGINX config file should exist.'\n  # describe file('/etc/nginx/nginx.conf') do\n  #   it { should be_file }\n  # end\n\n  describe 'test file' do\n    subject { file('/etc/nginx/nginx.conf') }\n    it 'should be a file' do\n      expect(subject).to(be_file)\n    end\n  end\nend\n","source_location":{"line":23,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"test file should be a file","run_time":0.087708406,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"Object","resource_params":"[]","resource_id":"test file"}]},{"id":"nginx-conf-perms","title":"NGINX configuration","desc":"The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others.","descriptions":[{"label":"default","data":"The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others."},{"label":"caveat","data":"Not applicable"}],"impact":1.0,"refs":[{"ref":[]}],"tags":{},"code":"control 'nginx-conf-perms' do\n  impact 1.0\n  title 'NGINX configuration'\n  desc 'The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others.'\n  describe file('/etc/nginx/nginx.conf') do\n    it { should be_owned_by 'root' }\n    it { should be_grouped_into 'root' }\n    it { should_not be_readable.by('others') }\n    it { should_not be_writable.by('others') }\n    it { should_not be_executable.by('others') }\n  end\nend\n","source_location":{"line":39,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[{"status":"passed","code_desc":"File /etc/nginx/nginx.conf is expected to be owned by \"root\"","run_time":0.009461259,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"file","resource_params":"[\"/etc/nginx/nginx.conf\"]","resource_id":"/etc/nginx/nginx.conf"},{"status":"passed","code_desc":"File /etc/nginx/nginx.conf is expected to be grouped into \"root\"","run_time":0.008325929,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"file","resource_params":"[\"/etc/nginx/nginx.conf\"]","resource_id":"/etc/nginx/nginx.conf"},{"status":"failed","code_desc":"File /etc/nginx/nginx.conf is expected not to be readable by others","run_time":0.095902631,"start_time":"2023-02-09T15:06:07+00:00","message":"expected File /etc/nginx/nginx.conf not to be readable by others","resource_class":"file","resource_params":"[\"/etc/nginx/nginx.conf\"]","resource_id":"/etc/nginx/nginx.conf"},{"status":"passed","code_desc":"File /etc/nginx/nginx.conf is expected not to be writable by others","run_time":0.000239006,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"file","resource_params":"[\"/etc/nginx/nginx.conf\"]","resource_id":"/etc/nginx/nginx.conf"},{"status":"passed","code_desc":"File /etc/nginx/nginx.conf is expected not to be executable by others","run_time":0.000152204,"start_time":"2023-02-09T15:06:07+00:00","resource_class":"file","resource_params":"[\"/etc/nginx/nginx.conf\"]","resource_id":"/etc/nginx/nginx.conf"}]},{"id":"nginx-shell-access","title":"NGINX shell access","desc":"The NGINX shell access should be restricted to admin users.","descriptions":[{"label":"default","data":"The NGINX shell access should be restricted to admin users."}],"impact":1.0,"refs":[],"tags":{},"code":"control 'nginx-shell-access' do\n  impact 1.0\n  title 'NGINX shell access'\n  desc 'The NGINX shell access should be restricted to admin users.'\n  # describe users.shells(/bash/).usernames do\n  #   it { should be_in input('admin_users')}\n  # end\n\n  non_admin_users = users.shells(/bash/).usernames\n  \n  describe \"Bash access for non-admin users\" do\n    it \"should be removed.\" do\n      failure_message = \"These non-admin should not have bash access: #{non_admin_users.join(\", \")}\"\n      expect(non_admin_users).to eq(input('admin_users')), failure_message\n    end\n  end\n\nend","source_location":{"line":52,"ref":"/workspaces/saf-training-lab-environment/my_nginx/controls/example.rb"},"waiver_data":{},"results":[{"status":"failed","code_desc":"Bash access for non-admin users should be removed.","run_time":0.001662546,"start_time":"2023-02-09T15:06:07+00:00","message":"These non-admin should not have bash access: root","resource_class":"Object","resource_params":"[]","resource_id":"Bash access for non-admin users"}]}],"status":"loaded","status_message":""}],"statistics":{"duration":0.213171648},"version":"5.21.29"}